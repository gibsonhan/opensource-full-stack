{"ast":null,"code":"var _jsxFileName = \"/home/gibby/opensource-full-stack/part6_tutorial/react-redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst countReducer = (state, action) => {\n  if (action.type === 'INCREMENT') {}\n};\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Hello\"));\n};\n/**\n *  Action -> are object -> contain atleast one type of action\n *         -> if data is involved  more field\n * \n *  Reducer -> impact/outcome of action -> fcn -> returns the curr state as param\n *          -> returns a new state\n * {\n *      type: 'INCREMENT'\n *  }\n */\n\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/gibby/opensource-full-stack/part6_tutorial/react-redux/src/index.js"],"names":["React","ReactDOM","countReducer","state","action","type","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC,CAE/B;AACJ,CAJD;;AAMA,MAAMC,GAAG,GAAG,MAAM;AACd,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ;AAKH,CAND;AAOA;;;;;;;;;;;;AAUAL,QAAQ,CAACM,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst countReducer = (state, action) => {\n    if(action.type === 'INCREMENT') {\n        \n    }\n}\n\nconst App = () => {\n    return (\n        <div>\n            <h1>Hello</h1>\n        </div>\n    )\n}\n/**\n *  Action -> are object -> contain atleast one type of action\n *         -> if data is involved  more field\n * \n *  Reducer -> impact/outcome of action -> fcn -> returns the curr state as param\n *          -> returns a new state\n * {\n *      type: 'INCREMENT'\n *  }\n */\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}