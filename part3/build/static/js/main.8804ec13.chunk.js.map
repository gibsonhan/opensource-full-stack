{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Number.js","components/Persons.js","components/EventMessage.js","services/contact.js","App.js","index.js"],"names":["Filter","newFilter","handleNewFilter","value","onChange","PersonForm","submit","nameValue","nameChange","phoneValue","phoneChange","onSubmit","type","Number","props","name","phoneNumber","handleDelete","onClick","Persons","showFilterNames","map","person","key","id","number","EventMessage","message","eventStyle","color","background","border","borderStyle","borderRadius","padding","marginBottom","fontStyle","fontSize","style","baseUrl","axios","get","then","res","data","newObject","post","deleteUrl","delete","newObj","updateUrl","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setNewFilter","showFilter","setShowFilter","eventMessage","setEventMessage","eventColor","setEventColor","useEffect","contactService","returnedContacts","console","log","catch","err","nameExist","includes","filter","toLowerCase","e","target","preventDefault","newContact","object","setTimeout","concat","window","confirm","updatePerson","returnedObject","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8804ec13.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({newFilter, handleNewFilter}) => {\n    return(\n        <div>\n            Filter show with: <input \n                value={newFilter}\n                onChange={handleNewFilter}\n            />\n        </div>\n    )\n}\n\nexport default Filter;","import React from 'react'\n\nconst PersonForm = ({submit, nameValue, nameChange, phoneValue, phoneChange}) => {\n    return (\n        <>\n        <h2> Add Contanct </h2>\n        <form onSubmit={submit}>\n                <div>\n                    name: <input\n                            value={nameValue}\n                            onChange={nameChange}\n                                />\n                </div>\n                <div>\n                    phone:<input\n                            value={phoneValue}\n                            onChange={phoneChange}\n                            />\n                </div>\n                <div>\n                    <button type=\"submit\"> add </button>\n                </div>\n            </form>\n        </>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Number = (props) => {\n    const {name, phoneNumber, handleDelete} = props\n    return(\n        <p>{name} {phoneNumber} <button onClick={handleDelete}>delete</button></p>\n    )\n}\n\nexport default Number","import React from 'react'\n\nimport Number from './Number'\n\nconst Persons = ({showFilterNames, handleDelete}) => {\n\n    const numberRow = () => {\n         return showFilterNames.map(person => \n            <Number \n                key={person.id} \n                name={person.name} \n                phoneNumber={person.number} \n                handleDelete={()=>{handleDelete(person.id, person.name)}}/>)\n    }\n    return (\n        <>\n            <h2> Phonebook Number</h2>\n            {numberRow()}\n        </>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst EventMessage = ({ message, color }) => {\n    const eventStyle = {\n        color: color,\n        background: 'lightgrey',\n        border: 'bold',\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n        fontStyle: 'solid',\n        fontSize: 20\n    }\n    \n    if(message === null) return <></>\n    return (\n        <div style={eventStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default EventMessage","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(res => res.data) \n}\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(res => res.data)\n}\n\nconst remove = (id) => {\n    const deleteUrl = baseUrl + `/${id}`\n    return axios.delete(deleteUrl)\n}\n\nconst update = (id, newObj) => {\n    const updateUrl = baseUrl + `/${id}`\n    const request = axios.put(updateUrl, newObj)\n    return request.then(res => res.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport EventMessage from './components/EventMessage'\n\nimport contactService from './services/contact'\n\nconst App = () => {\n\n    const [ persons, setPersons] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber] = useState('')\n    const [ newFilter, setNewFilter] = useState('')\n    const [ showFilter, setShowFilter] = useState(false)\n    const [ eventMessage, setEventMessage] =useState(null)\n    const [ eventColor, setEventColor] = useState('green')\n\n    const handleNewFilter = (e) => {\n        if(newFilter !== '') setShowFilter(true)\n        setNewFilter(e.target.value.toLowerCase())\n    }\n    const handleNewName = (e) => {\n        setNewName(e.target.value)\n    }\n\n    const handleNewNumber = (e) => {\n        setNewNumber(e.target.value)\n    }\n\n    const handleDelete = (id, name) => {\n        const remove = window.confirm(`Do you want to delete ${name}`)\n        if(remove === true) {\n            contactService\n                .remove(id)\n                .then(()=> {\n                    setEventMessage(`${name} has been deleted`)\n                    setTimeout(()=>{\n                        setEventMessage(null)\n                    }, 5000)\n                    setPersons(persons.filter(person => person.id !== id))\n                })\n                .catch(err => {\n                    setEventMessage(`Infomation about ${name} has already been removed from the server`)\n                    setEventColor('red')\n                    setTimeout(()=> {\n                        setEventMessage(null)\n                        setEventColor('green')\n                    }, 3000)\n                    setPersons(persons.filter(person => person.id !== id))\n                })\n        }\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const newContact = {\n            name: newName,\n            number: newNumber\n        }\n        if(nameExist() === false){\n            contactService\n                .create(newContact)\n                .then(object => {\n                    setEventMessage(`${newName} has been added to the phonebook`)\n                    setTimeout(() => {\n                        setEventMessage(null)\n                    }, 5000)\n                    setPersons(persons.concat(object))\n                })\n                .catch(err => {\n                    setEventMessage(`${err}`)\n                    setEventColor('red')\n                     setTimeout(()=> {\n                        setEventMessage(null)\n                        setEventColor('green')\n                    }, 3000)\n                })\n        }\n        else {\n            const update = window.confirm(`${newName} already exist in the phone book, would you like to replace the old number?`)\n            if(update === true) {\n                const updatePerson = persons.filter(person => person.name === newName)\n                contactService\n                    .update(updatePerson[0].id, newContact)\n                    .then(returnedObject => {\n                        setEventMessage(`${newName} has been updated`)\n                        setTimeout(()=> {setEventMessage(null)}, 3000)\n                        //setPersons(persons.filter(person => person.name !== newName).concat(returnedObject))\n                        setPersons(persons.map(person => person.name !== newName ? person : returnedObject ))\n                    })\n                    .catch(err => {\n                        console.log('update failed', err)\n                        setEventMessage(`Infomation about ${newName} has already been removed from the server`)\n                        setEventColor('red')\n                        setTimeout(()=> {\n                            setEventMessage(null)\n                            setEventColor('green')\n                        }, 5000)\n                    })\n            }\n            \n        }\n        setNewName('')\n        setNewNumber('')\n    }\n\n    useEffect(() => {\n        contactService\n            .getAll()\n                .then(returnedContacts => {\n                    console.log('getAll promise successful')\n                    setPersons(returnedContacts)\n                })\n                .catch(err => console.log('getAll promise rejected', err))\n    }, [])\n\n    const nameExist = () => {\n        let arrNames = persons.map(person => person.name);\n        return arrNames.includes(newName)\n    }\n   \n    const showFilterNames = showFilter\n        ? persons.filter(person => person.name.toLowerCase().includes(newFilter))\n        : persons\n\n    return (\n       <div>\n            <h1>Phone Book</h1>\n            <EventMessage message={eventMessage} color={eventColor} />\n            <Filter newFilter={newFilter} handleNewFilter={handleNewFilter} />\n            <PersonForm \n                submit={handleSubmit}\n                nameValue={newName}\n                nameChange={handleNewName}\n                phoneValue={newNumber}\n                phoneChange={handleNewNumber}\n            />\n            <Persons \n                showFilterNames={showFilterNames} \n                handleDelete={handleDelete}/>\n       </div> \n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}